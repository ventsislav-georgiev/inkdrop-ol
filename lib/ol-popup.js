'use babel';
import ol from "./ol"; export default class Popup extends ol.Overlay { constructor(t) { var e = t || {}; void 0 === e.autoPan && (e.autoPan = { animation: { duration: 250 } }); var n = document.createElement("div"); e.element = n, super(e), this.container = n, this.container.className = "ol-popup", this.closer = document.createElement("a"), this.closer.className = "ol-popup-closer", this.closer.href = "#", this.container.appendChild(this.closer); var o = this; this.closer.addEventListener("click", (function (t) { o.container.style.display = "none", o.closer.blur(), t.preventDefault() }), !1), this.content = document.createElement("div"), this.content.className = "ol-popup-content", this.container.appendChild(this.content), Popup.enableTouchScroll_(this.content) } show(t, e) { return e instanceof HTMLElement ? (this.content.innerHTML = "", this.content.appendChild(e)) : this.content.innerHTML = e, this.container.style.display = "block", this.content.scrollTop = 0, this.setPosition(t), this } static isTouchDevice_() { try { return document.createEvent("TouchEvent"), !0 } catch (t) { return !1 } } static enableTouchScroll_(t) { if (Popup.isTouchDevice_()) { var e = 0; t.addEventListener("touchstart", (function (t) { e = this.scrollTop + t.touches[0].pageY }), !1), t.addEventListener("touchmove", (function (t) { this.scrollTop = e - t.touches[0].pageY }), !1) } } hide() { return this.container.style.display = "none", this } isOpened() { return "block" == this.container.style.display } } window.ol && window.ol.Overlay && (window.ol.Overlay.Popup = Popup);
